<UserControl
  x:Class="Sticky.NoteControl"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:ui="http://schemas.modernwpf.com/2019"
  xmlns:sys="clr-namespace:System;assembly=mscorlib"
  xmlns:local="clr-namespace:Sticky"
  x:Name="NameNoteControl"
>
  <UserControl.Resources>
    <ui:BindingProxy x:Key="BackgroundProxy" Value="{DynamicResource Background}"/>
    <sys:Double x:Key="FoldedCornerSize">16</sys:Double>
  </UserControl.Resources>

  <!-- Double Click Opens Note -->
  <UserControl.InputBindings>
    <KeyBinding Gesture="ENTER" Command="{Binding OpenCommand}"/>
    <MouseBinding
      MouseAction="LeftDoubleClick"
      Command="{Binding OpenCommand}"
      CommandParameter="{Binding Id}"
    />
  </UserControl.InputBindings>

  <Border
    x:Name="PartBorder"
    BorderThickness="0"
    BorderBrush="Transparent"
    CornerRadius="5"
  >
    <!-- Folded Corner Clip -->
    <Border.Clip>
      <MultiBinding
        Converter="{StaticResource FoldedCornerConverter}"
        ConverterParameter="{StaticResource FoldedCornerSize}"
      >
        <Binding Path="ActualWidth"  ElementName="PartBorder"/>
        <Binding Path="ActualHeight" ElementName="PartBorder"/>
        <Binding Path="IsOpen"/>
      </MultiBinding>
    </Border.Clip>

    <Border.Style>
      <Style TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{DynamicResource Background}"/>
        <Style.Triggers>
          <DataTrigger Binding="{Binding ElementName=NameNoteControl, Path=IsMouseOver}" Value="True">
            <Setter Property="Background" Value="{Binding Path=Value, Source={StaticResource BackgroundProxy}, Converter={StaticResource ColorToHoverConverter}}"/>
          </DataTrigger>
          <DataTrigger Binding="{Binding ElementName=NameNoteControl, Path=IsKeyboardFocusWithin}" Value="True">
            <Setter Property="Background" Value="{Binding Path=Value, Source={StaticResource BackgroundProxy}, Converter={StaticResource ColorToHoverConverter}}"/>
          </DataTrigger>
        </Style.Triggers>
      </Style>
    </Border.Style>

    <Grid Margin="0">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="*"/>
      </Grid.RowDefinitions>

      <!-- Folded Corner -->
      <Canvas
        Grid.Row="0"
        ZIndex="1"
        Width="{StaticResource FoldedCornerSize}"
        Height="{StaticResource FoldedCornerSize}"
        HorizontalAlignment="Left"
        VerticalAlignment="Top"
        Visibility="{Binding Path=IsOpen, Converter={StaticResource BooleanToVisibilityConverter}}"
      >
        <Polygon
          Points="{Binding Source={StaticResource FoldedCornerSize}, Converter={StaticResource FoldedCornerTriangleConverter}}"
          Stroke="{Binding Source={StaticResource BackgroundProxy}, Path=Value, Converter={StaticResource ColorToPressedConverter}}"
          Fill="{Binding Source={StaticResource BackgroundProxy}, Path=Value, Converter={StaticResource ColorToPressedConverter}}"
        />
      </Canvas>

      <!-- Top-Right Controls -->
      <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Right" Height="23">
        <!-- Menu Button -->
        <local:ButtonEx
          x:Name="MenuButton"
          ToolTip="Menu"
          Content="&#xE712;"
          HorizontalAlignment="Right"
          VerticalContentAlignment="Bottom"
          VerticalAlignment="Bottom"
          Width="32"
          Height="23"
          FontSize="16"
          BackgroundColor="{Binding Path=Value, Source={StaticResource BackgroundProxy}, Converter={StaticResource ColorToHoverConverter}}"
          Foreground="{DynamicResource ForegroundSecondary}"
          Command="{Binding OpenContextMenuCommand}"

          Focusable="True"
          IsTabStop="True"
          FocusVisualStyle="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}"
          ui:FocusVisualHelper.UseSystemFocusVisuals="{DynamicResource UseSystemFocusVisuals}"
          ui:FocusVisualHelper.FocusVisualMargin="0"
        >
          <local:ButtonEx.Visibility>
            <MultiBinding Converter="{StaticResource BooleanToVisibilityMultiConverter}">
              <Binding ElementName="MenuButton" Path="IsKeyboardFocused"/>
              <Binding ElementName="NameNoteControl" Path="IsMouseOver"/>
              <Binding ElementName="NameNoteControl" Path="IsKeyboardFocused"/>
            </MultiBinding>
          </local:ButtonEx.Visibility>
        </local:ButtonEx>

        <!-- Note Updated Time -->
        <TextBlock
          FontSize="10"
          VerticalAlignment="Bottom"
          HorizontalAlignment="Center"
          Foreground="{DynamicResource ForegroundSecondary}"
          Margin="0,0,10,0"
          Text="{Binding Path=UpdatedAt, Converter={StaticResource DateTimeConverter}}"
        >
          <TextBlock.Visibility>
            <MultiBinding Converter="{StaticResource ReverseBooleanToVisibilityMultiConverter}">
              <Binding ElementName="MenuButton" Path="IsKeyboardFocused"/>
              <Binding ElementName="NameNoteControl" Path="IsMouseOver"/>
              <Binding ElementName="NameNoteControl" Path="IsKeyboardFocused"/>
            </MultiBinding>
          </TextBlock.Visibility>
        </TextBlock>
      </StackPanel>

      <StackPanel Grid.Row="1" Margin="0,0,0,15">
        <StackPanel.InputBindings>
          <MouseBinding
            MouseAction="LeftDoubleClick"
            Command="{Binding OpenCommand}"
            CommandParameter="{Binding Id}"
          />
        </StackPanel.InputBindings>

        <local:BindableRichTextBox
          Style="{StaticResource DefaultRichTextBoxStyle}"
          ui:ControlHelper.PlaceholderText="Take a note..."
          x:Name="NoteRichTextBox"
          Margin="0"
          Cursor="Arrow"
          Focusable="False"
          IsHitTestVisible="False"
          Background="Transparent"
          BorderBrush="Transparent"
          BorderThickness="0"
          IsReadOnly="True"
          VerticalScrollBarVisibility="Auto"
          HorizontalScrollBarVisibility="Auto"
          Foreground="{DynamicResource Foreground}"
          local:RichTextBoxHelper.DocumentXaml="{Binding Path=Content}"
        >
          <local:BindableRichTextBox.Resources>
            <Thickness x:Key="TextControlBorderThemeThicknessFocused">0</Thickness>
            <Style TargetType="{x:Type Paragraph}">
              <Setter Property="Margin" Value="0"/>
            </Style>
          </local:BindableRichTextBox.Resources>

          <!-- Context Menu -->
          <local:BindableRichTextBox.ContextMenu>
            <ContextMenu>
              <!-- Open Note -->
              <MenuItem
                Header="Open note"
                Command="{Binding OpenCommand}"
                CommandParameter="{Binding Path=Id}"
                Visibility="{Binding Path=IsOpen, Converter={StaticResource ReverseBooleanToVisibilityConverter}}"
              >
                <MenuItem.Icon>
                  <TextBlock FontFamily="{DynamicResource SymbolThemeFontFamily}" Text="&#xE8A7;"/>
                </MenuItem.Icon>
              </MenuItem>

              <!-- Close Note -->
              <MenuItem
                Header="Close note"
                Command="{Binding CloseCommand}"
                CommandParameter="{Binding Path=Id}"
                Visibility="{Binding Path=IsOpen, Converter={StaticResource BooleanToVisibilityConverter}}"
              >
                <MenuItem.Icon>
                  <TextBlock FontFamily="{DynamicResource SymbolThemeFontFamily}" Text="&#xE73F;"/>
                </MenuItem.Icon>
              </MenuItem>

              <!-- Delete Note -->
              <MenuItem
                Header="Delete note"
                Command="{Binding DeleteCommand}"
              >
                <MenuItem.Icon>
                  <TextBlock FontFamily="{DynamicResource SymbolThemeFontFamily}" Text="&#xE74D;"/>
                </MenuItem.Icon>
              </MenuItem>
            </ContextMenu>
          </local:BindableRichTextBox.ContextMenu>
        </local:BindableRichTextBox>
      </StackPanel>
    </Grid>
  </Border>
</UserControl>
