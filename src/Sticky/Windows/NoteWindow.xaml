<Window
  x:Name="NameNoteWindow"
  x:Class="Sticky.NoteWindow"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:ui="http://schemas.modernwpf.com/2019"
  xmlns:local="clr-namespace:Sticky"
  Title="sticky"
  MinWidth="200"
  MinHeight="100"
  Width="340"
  Height="240"
  Topmost="{Binding Path=IsAlwaysOnTop, Mode=OneWay}"
  ResizeMode="CanResizeWithGrip"
  ShowInTaskbar="True"
  Icon="/Resources/icon.ico"
  AllowsTransparency="True"
  WindowStyle="None"
  KeyboardNavigation.DirectionalNavigation="Once"
>
  <Window.InputBindings>
    <KeyBinding Gesture="CTRL+N" Command="{Binding NewNoteCommand}"/>
    <KeyBinding Gesture="CTRL+W" Command="{Binding CloseCommand}"/>
    <KeyBinding Gesture="CTRL+D" Command="{Binding DeleteCommand}"/>
    <KeyBinding Gesture="CTRL+H" Command="{Binding OpenNoteListCommand}"/>
    <KeyBinding Gesture="CTRL+TAB" Command="{Binding ActivateNextWindowCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
    <KeyBinding Gesture="CTRL+SHIFT+TAB" Command="{Binding ActivatePreviousWindowCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
  </Window.InputBindings>

  <Grid x:Name="LayoutRoot">

    <!-- Overlay -->
    <Grid
      x:Name="Overlay"
      Panel.ZIndex="1000"
      Visibility="Collapsed"
      MouseLeftButtonDown="OnHideOverlay"
      FocusManager.IsFocusScope="True"
      KeyboardNavigation.TabNavigation="Cycle"
      KeyboardNavigation.DirectionalNavigation="Contained"
      KeyboardNavigation.ControlTabNavigation="Contained"
    >
      <Grid.InputBindings>
        <KeyBinding Gesture="ESCAPE" Command="{Binding HideOverlayCommand}"/>
      </Grid.InputBindings>

      <Grid.Background>
        <SolidColorBrush Color="Black" Opacity="0.3"/>
      </Grid.Background>

      <!--
        FocusVisualStyle does not honor the elements RenderTransform if it is dynamic.
        Using an AdornerDecorator is a work around for it.

        See: https://drwpf.com/blog/2010/01/29/render-transforms-and-focus-visuals/
        -->
      <AdornerDecorator>
        <!-- Slide Down Animation -->
        <AdornerDecorator.Style>
          <Style TargetType="{x:Type AdornerDecorator}">
            <Setter Property="RenderTransform">
              <Setter.Value>
                <TranslateTransform X="0" Y="-200"/>
              </Setter.Value>
            </Setter>
            <Style.Triggers>
              <DataTrigger Binding="{Binding ElementName=Overlay, Path=Visibility}" Value="Visible">
                <DataTrigger.EnterActions>
                  <BeginStoryboard>
                    <Storyboard>
                      <DoubleAnimation
                        Storyboard.TargetProperty="RenderTransform.Y"
                        Duration="0:0:0.2"
                        From="-200"
                        To="0"
                      >
                        <DoubleAnimation.EasingFunction>
                          <QuadraticEase EasingMode="EaseOut"/>
                        </DoubleAnimation.EasingFunction>
                      </DoubleAnimation>
                    </Storyboard>
                  </BeginStoryboard>
                </DataTrigger.EnterActions>
              </DataTrigger>
            </Style.Triggers>
          </Style>
        </AdornerDecorator.Style>

        <StackPanel Orientation="Vertical">
          <!-- Color Theme Buttons -->
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <local:RadioButtonEx x:Name="RadioButtonThemeYellow"   Focusable="True" IsTabStop="True" FocusVisualStyle="{StaticResource ThickFocusVisualStyle}" GroupName="Theme" Style="{StaticResource RadioButtonExOverlay}" Grid.Column="0" BackgroundColor="#FFFFE66E" Command="{Binding ChangeNoteThemeCommand}" CommandParameter="Theme.Yellow"/>
            <local:RadioButtonEx x:Name="RadioButtonThemeGreen"    Focusable="True" IsTabStop="True" FocusVisualStyle="{StaticResource ThickFocusVisualStyle}" GroupName="Theme" Style="{StaticResource RadioButtonExOverlay}" Grid.Column="1" BackgroundColor="#FFA1EF9B" Command="{Binding ChangeNoteThemeCommand}" CommandParameter="Theme.Green"/>
            <local:RadioButtonEx x:Name="RadioButtonThemePink"     Focusable="True" IsTabStop="True" FocusVisualStyle="{StaticResource ThickFocusVisualStyle}" GroupName="Theme" Style="{StaticResource RadioButtonExOverlay}" Grid.Column="2" BackgroundColor="#FFFFAFDF" Command="{Binding ChangeNoteThemeCommand}" CommandParameter="Theme.Pink"/>
            <local:RadioButtonEx x:Name="RadioButtonThemePurple"   Focusable="True" IsTabStop="True" FocusVisualStyle="{StaticResource ThickFocusVisualStyle}" GroupName="Theme" Style="{StaticResource RadioButtonExOverlay}" Grid.Column="3" BackgroundColor="#FFD7AFFF" Command="{Binding ChangeNoteThemeCommand}" CommandParameter="Theme.Purple"/>
            <local:RadioButtonEx x:Name="RadioButtonThemeBlue"     Focusable="True" IsTabStop="True" FocusVisualStyle="{StaticResource ThickFocusVisualStyle}" GroupName="Theme" Style="{StaticResource RadioButtonExOverlay}" Grid.Column="4" BackgroundColor="#FF9EDFFF" Command="{Binding ChangeNoteThemeCommand}" CommandParameter="Theme.Blue"/>
            <local:RadioButtonEx x:Name="RadioButtonThemeGray"     Focusable="True" IsTabStop="True" FocusVisualStyle="{StaticResource ThickFocusVisualStyle}" GroupName="Theme" Style="{StaticResource RadioButtonExOverlay}" Grid.Column="5" BackgroundColor="#FFE0E0E0" Command="{Binding ChangeNoteThemeCommand}" CommandParameter="Theme.Gray"/>
            <local:RadioButtonEx x:Name="RadioButtonThemeCharcoal" Focusable="True" IsTabStop="True" FocusVisualStyle="{StaticResource ThickFocusVisualStyle}" GroupName="Theme" Style="{StaticResource RadioButtonExOverlay}" Grid.Column="6" BackgroundColor="#FF767676" Command="{Binding ChangeNoteThemeCommand}" CommandParameter="Theme.Charcoal"/>
          </Grid>

          <!-- Notes List Button -->
          <local:ButtonEx
            x:Name="NoteListButton"
            Command="{Binding OpenNoteListCommand}"
            BackgroundColor="White"
            Foreground="Black"
            HorizontalContentAlignment="Left"
            Padding="17"

            Focusable="True"
            IsTabStop="True"
            FocusVisualStyle="{StaticResource ThickFocusVisualStyle}"
          >
            <Button.Content>
              <StackPanel Orientation="Horizontal">
                <TextBlock Text="&#xEA37;" FontSize="16" FontFamily="{DynamicResource SymbolThemeFontFamily}"/>
                <TextBlock
                  Text="Notes list"
                  FontFamily="Arial"
                  FontSize="15"
                  Margin="15,0,0,0"
                />
              </StackPanel>
            </Button.Content>
          </local:ButtonEx>

          <!-- Delete Note Button -->
          <local:ButtonEx
            Command="{Binding DeleteCommand}"
            CommandParameter="{Binding Path=Id}"
            BackgroundColor="White"
            Foreground="Red"
            HorizontalContentAlignment="Left"
            Padding="17"

            Focusable="True"
            IsTabStop="True"
            FocusVisualStyle="{StaticResource ThickFocusVisualStyle}"
          >
            <Button.Content>
              <StackPanel Orientation="Horizontal">
                <TextBlock Text="&#xE74D;" FontSize="16" FontFamily="{DynamicResource SymbolThemeFontFamily}"/>
                <TextBlock
                  Text="Delete note"
                  FontFamily="Arial"
                  FontSize="15"
                  Margin="15,0,0,0"
                />
              </StackPanel>
            </Button.Content>
          </local:ButtonEx>
        </StackPanel>
      </AdornerDecorator>
    </Grid>

    <!-- Main Content -->
    <Grid Background="{DynamicResource Background}">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="*"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>

      <!-- TitleBar -->
      <DockPanel
        x:Name="TitleBar"
        Grid.Row="0"
        Background="{DynamicResource BackgroundSecondary}"
        Height="32"
        LastChildFill="False"
        Margin="0"
        VerticalAlignment="Top"
      >
        <DockPanel.Resources>
          <ui:BindingProxy x:Key="BackgroundSecondaryProxy" Value="{DynamicResource BackgroundSecondary}"/>

          <!-- Slide In/Out Animation -->
          <Style TargetType="{x:Type DockPanel}">
            <Setter Property="RenderTransform">
              <Setter.Value>
                <TranslateTransform X="0" Y="-42"/>
              </Setter.Value>
            </Setter>
            <Style.Triggers>
              <DataTrigger Binding="{Binding ElementName=NameNoteWindow, Path=IsKeyboardFocusWithin}" Value="True">
                <DataTrigger.EnterActions>
                  <BeginStoryboard>
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Y" Duration="0:0:0.2" To="0">
                        <DoubleAnimation.EasingFunction>
                          <QuadraticEase EasingMode="EaseOut"/>
                        </DoubleAnimation.EasingFunction>
                      </DoubleAnimation>
                    </Storyboard>
                  </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                  <BeginStoryboard>
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Y" Duration="0:0:0.2" To="-42">
                        <DoubleAnimation.EasingFunction>
                          <QuadraticEase EasingMode="EaseIn"/>
                        </DoubleAnimation.EasingFunction>
                      </DoubleAnimation>
                    </Storyboard>
                  </BeginStoryboard>
                </DataTrigger.ExitActions>
              </DataTrigger>
            </Style.Triggers>
          </Style>

          <Style
            x:Key="TitleBarButtonStyle"
            TargetType="{x:Type ui:TitleBarButton}"
            BasedOn="{StaticResource {x:Type ui:TitleBarButton}}"
            >
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Width" Value="32"/>
            <Setter Property="Height" Value="32"/>

            <Setter Property="InactiveBackground" Value="{Binding Path=Value, Source={StaticResource BackgroundSecondaryProxy}}"/>
            <Setter Property="Background" Value="{Binding Path=Value, Source={StaticResource BackgroundSecondaryProxy}}"/>
            <Setter Property="HoverBackground" Value="{Binding Path=Value, Source={StaticResource BackgroundSecondaryProxy}, Converter={StaticResource ColorToHoverConverter}}"/>
            <Setter Property="PressedBackground" Value="{Binding Path=Value, Source={StaticResource BackgroundSecondaryProxy}, Converter={StaticResource ColorToPressedConverter}}"/>

            <Setter Property="InactiveForeground" Value="{DynamicResource ForegroundSecondary}"/>
            <Setter Property="Foreground" Value="{DynamicResource ForegroundSecondary}"/>
            <Setter Property="HoverForeground" Value="{DynamicResource ForegroundSecondary}"/>
            <Setter Property="PressedForeground" Value="{DynamicResource ForegroundSecondary}"/>
          </Style>
        </DockPanel.Resources>

        <!-- Left Side Controls -->
        <StackPanel Orientation="Horizontal" DockPanel.Dock="Left">
          <!-- New Note -->
          <ui:TitleBarButton
            Style="{StaticResource TitleBarButtonStyle}"
            Content="&#xE948;"
            ToolTip="New note"
            Command="{Binding NewNoteCommand}"
            CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"

            Focusable="True"
            IsTabStop="True"
            FocusVisualStyle="{StaticResource ThickFocusVisualStyle}"
          />

          <!-- Unpin Note -->
          <ui:TitleBarButton
            Style="{StaticResource TitleBarButtonStyle}"
            Content="&#xE77A;"
            ToolTip="Unpin note"
            Command="{Binding UnpinCommand}"
            Visibility="{Binding Path=Topmost, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Converter={StaticResource BooleanToVisibilityConverter}}"

            Focusable="True"
            IsTabStop="True"
            FocusVisualStyle="{StaticResource ThickFocusVisualStyle}"
          />

          <!-- Pin Note -->
          <ui:TitleBarButton
            Style="{StaticResource TitleBarButtonStyle}"
            Content="&#xE840;"
            ToolTip="Pin note"
            Command="{Binding PinCommand}"
            Visibility="{Binding Path=Topmost, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Converter={StaticResource ReverseBooleanToVisibilityConverter}}"

            Focusable="True"
            IsTabStop="True"
            FocusVisualStyle="{StaticResource ThickFocusVisualStyle}"
          />
        </StackPanel>

        <!-- Right Side Controls -->
        <StackPanel Orientation="Horizontal" DockPanel.Dock="Right">
          <!-- Open Menu -->
          <ui:TitleBarButton
            Style="{StaticResource TitleBarButtonStyle}"
            Content="&#xE712;"
            ToolTip="Menu"
            Command="{Binding ShowOverlayCommand}"

            Focusable="True"
            IsTabStop="True"
            FocusVisualStyle="{StaticResource ThickFocusVisualStyle}"
          />

          <!-- Close Note -->
          <ui:TitleBarButton
            Style="{StaticResource TitleBarButtonStyle}"
            Content="&#xE947;"
            ToolTip="Close note"
            Command="{Binding CloseCommand}"

            Focusable="True"
            IsTabStop="True"
            FocusVisualStyle="{StaticResource ThickFocusVisualStyle}"
          />
        </StackPanel>
      </DockPanel>

      <!-- Rich Text Box -->
      <local:BindableRichTextBox
        Grid.Row="1"
        Style="{StaticResource DefaultRichTextBoxStyle}"
        x:Name="NoteRichTextBox"
        Background="Transparent"
        BorderBrush="Transparent"
        BorderThickness="0"
        CaretBrush="{DynamicResource TextCursorForeground}"
        Foreground="{DynamicResource Foreground}"
        SelectionBrush="{DynamicResource SelectionBackground}"
        HorizontalScrollBarVisibility="Auto"
        VerticalScrollBarVisibility="Auto"
        ui:ControlHelper.PlaceholderText="Take a note..."
        local:RichTextBoxHelper.DocumentXaml="{Binding Path=Content}"
        MouseWheel="OnMouseWheel"
      >
        <!-- @TODO: Enter vs Shift+Enter -->
        <local:BindableRichTextBox.Resources>
          <Thickness x:Key="TextControlBorderThemeThicknessFocused">0</Thickness>
          <Style TargetType="{x:Type Paragraph}">
            <Setter Property="Margin" Value="0"/>
          </Style>
        </local:BindableRichTextBox.Resources>
      </local:BindableRichTextBox>

      <!-- Toolbar -->
      <Border
        Grid.Row="2"
        x:Name="Toolbar"
        DockPanel.Dock="Bottom"
        BorderThickness="0,1,0,0"
        BorderBrush="#10000000"
      >
        <!-- Slide In/Out Animation -->
        <Border.Style>
          <Style>
            <Setter Property="Border.RenderTransform">
              <Setter.Value>
                <TranslateTransform X="0" Y="42"/>
              </Setter.Value>
            </Setter>
            <Style.Triggers>
              <DataTrigger Binding="{Binding ElementName=NameNoteWindow, Path=IsKeyboardFocusWithin}" Value="True">
                <DataTrigger.EnterActions>
                  <BeginStoryboard>
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Y" Duration="0:0:0.2" To="0">
                        <DoubleAnimation.EasingFunction>
                          <QuadraticEase EasingMode="EaseOut"/>
                        </DoubleAnimation.EasingFunction>
                      </DoubleAnimation>
                    </Storyboard>
                  </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                  <BeginStoryboard>
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Y" Duration="0:0:0.2" To="42">
                        <DoubleAnimation.EasingFunction>
                          <QuadraticEase EasingMode="EaseIn"/>
                        </DoubleAnimation.EasingFunction>
                      </DoubleAnimation>
                    </Storyboard>
                  </BeginStoryboard>
                </DataTrigger.ExitActions>
              </DataTrigger>
            </Style.Triggers>
          </Style>
        </Border.Style>

        <StackPanel  Orientation="Horizontal" Margin="0">
          <!-- Bold Button -->
          <local:ToggleButtonEx
            x:Name="ToolbarButtonBold"
            Style="{StaticResource ToggleButtonExToolbar}"
            Content="&#xE8DD;"
            ToolTip="Bold"
            Command="EditingCommands.ToggleBold"
            CommandTarget="{Binding ElementName=NoteRichTextBox}"

            Focusable="True"
            IsTabStop="True"
            FocusVisualStyle="{StaticResource ThickFocusVisualStyle}"
          />

          <!-- Italic Button -->
          <local:ToggleButtonEx
            x:Name="ToolbarButtonItalic"
            Style="{StaticResource ToggleButtonExToolbar}"
            Content="&#xE8DB;"
            ToolTip="Italic"
            Command="EditingCommands.ToggleItalic"
            CommandTarget="{Binding ElementName=NoteRichTextBox}"

            Focusable="True"
            IsTabStop="True"
            FocusVisualStyle="{StaticResource ThickFocusVisualStyle}"
          />

          <!-- Underline Button -->
          <local:ToggleButtonEx
            x:Name="ToolbarButtonUnderline"
            Style="{StaticResource ToggleButtonExToolbar}"
            Content="&#xE8DC;"
            ToolTip="Underline"
            Command="EditingCommands.ToggleUnderline"
            CommandTarget="{Binding ElementName=NoteRichTextBox}"

            Focusable="True"
            IsTabStop="True"
            FocusVisualStyle="{StaticResource ThickFocusVisualStyle}"
          />

          <!-- Strikethrough Button -->
          <local:ToggleButtonEx
            x:Name="ToolbarButtonStrikethrough"
            Style="{StaticResource ToggleButtonExToolbar}"
            Content="&#xEDE0;"
            ToolTip="Strikethrough"
            Command="{x:Static local:BindableRichTextBox.ToggleStrikethrough}"
            CommandTarget="{Binding ElementName=NoteRichTextBox}"

            Focusable="True"
            IsTabStop="True"
            FocusVisualStyle="{StaticResource ThickFocusVisualStyle}"
          />

          <!-- Toggle Bullets Button -->
          <local:ToggleButtonEx
            x:Name="ToolbarButtonBullets"
            Style="{StaticResource ToggleButtonExToolbar}"
            Content="&#xE8FD;"
            ToolTip="Toggle bullets"
            Command="EditingCommands.ToggleBullets"
            CommandTarget="{Binding ElementName=NoteRichTextBox}"

            Focusable="True"
            IsTabStop="True"
            FocusVisualStyle="{StaticResource ThickFocusVisualStyle}"
          />

          <!-- @TODO: Add Image Button -->
          <local:ButtonEx
            Style="{StaticResource ButtonExToolbar}"
            Content="&#xEB9F;"
            ToolTip="Add image"

            Focusable="True"
            IsTabStop="True"
            FocusVisualStyle="{StaticResource ThickFocusVisualStyle}"
          />

          <!-- Decrease Font Size Button -->
          <local:ButtonEx
            Style="{StaticResource ButtonExToolbar}"
            Content="&#xE8E7;"
            ToolTip="Decrease font size"
            Command="EditingCommands.DecreaseFontSize"
            CommandTarget="{Binding ElementName=NoteRichTextBox}"

            Focusable="True"
            IsTabStop="True"
            FocusVisualStyle="{StaticResource ThickFocusVisualStyle}"
          />

          <!-- Increase Font Size Button -->
          <local:ButtonEx
            Style="{StaticResource ButtonExToolbar}"
            Content="&#xE8E8;"
            ToolTip="Increase font size"
            Command="EditingCommands.IncreaseFontSize"
            CommandTarget="{Binding ElementName=NoteRichTextBox}"

            Focusable="True"
            IsTabStop="True"
            FocusVisualStyle="{StaticResource ThickFocusVisualStyle}"
          />

          <!--
            @TODO: EditingCommands.ToggleSubscript
            @TODO: EditingCommands.ToggleSuperscript
            @TODO: EditingCommands.AlignLeft
            @TODO: EditingCommands.AlignCenter
            @TODO: EditingCommands.AlignRight
            @TODO: EditingCommands.IncreaseIndentation
            @TODO: EditingCommands.DecreaseIndentation
            @TODO: EditingCommands.ToggleNumbering
            -->
        </StackPanel>
      </Border>
    </Grid>
  </Grid>
</Window>
