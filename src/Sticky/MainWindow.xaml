<Window
  x:Class="Sticky.MainWindow"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:ui="http://schemas.modernwpf.com/2019"
  xmlns:local="clr-namespace:Sticky"
  AllowsTransparency="True"
  Height="500"
  MinHeight="500"
  MinWidth="320"
  ResizeMode="CanResizeWithGrip"
  SizeChanged="OnSizeChanged"
  Title="sticky"
  Width="320"
  Icon="/icon.ico"
  ui:WindowHelper.UseModernWindowStyle="True"
  WindowStyle="None"
>
  <Window.Resources>
    <DataTemplate x:Key="NoteItemTemplate">
      <Border x:Name="PlaceholderName" BorderThickness="1" BorderBrush="Transparent" CornerRadius="5">
        <Border.Style>
          <Style TargetType="{x:Type Border}">
            <Setter Property="Background" Value="{DynamicResource Background}"/>
            <Style.Triggers>
              <DataTrigger Binding="{Binding ElementName=PlaceholderName, Path=IsMouseOver}" Value="True">
                <Setter Property="Background" Value="{DynamicResource BackgroundHover}"/>
              </DataTrigger>
            </Style.Triggers>
          </Style>
        </Border.Style>
        <StackPanel Orientation="Vertical">
          <Grid HorizontalAlignment="Right" Height="23">
            <Button
              ToolTip="Menu"
              HorizontalAlignment="Right"
              VerticalContentAlignment="Bottom"
              VerticalAlignment="Bottom"
              Width="32"
              Height="23"
              Background="Transparent"
              BorderThickness="0"
              Focusable="False"
              FontFamily="Segoe MDL2 Assets"
              FontSize="16"
              Foreground="{DynamicResource ForegroundSecondary}"
              Margin="0,0,0,0"
              Opacity="1.0"
              TextBlock.FontFamily="Segoe MDL2 Assets"
              TextBlock.Foreground="{DynamicResource ForegroundSecondary}"
              TextOptions.TextHintingMode="Fixed"
              TextOptions.TextRenderingMode="ClearType"
              TextOptions.TextFormattingMode="Display"
              UseLayoutRounding="True"
              >
              <Border BorderBrush="{x:Null}" Height="23" Margin="0,0,10,0">
                <TextBlock Text="&#xE712;" VerticalAlignment="Bottom"/>
              </Border>
              <Button.Style>
                <Style TargetType="{x:Type Button}">
                  <Setter Property="Template">
                    <Setter.Value>
                      <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" SnapsToDevicePixels="true">
                          <ContentPresenter
                            Focusable="False"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            Margin="{TemplateBinding Margin}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                          <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="Transparent"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                          </Trigger>
                          <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="Transparent"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                          </Trigger>
                        </ControlTemplate.Triggers>
                      </ControlTemplate>
                    </Setter.Value>
                  </Setter>

                  <Setter Property="Visibility" Value="Hidden"/>
                  <Style.Triggers>
                    <DataTrigger Binding="{Binding ElementName=PlaceholderName, Path=IsMouseOver}" Value="True">
                      <Setter Property="Visibility" Value="Visible"/>
                    </DataTrigger>
                  </Style.Triggers>
                </Style>
              </Button.Style>
            </Button>
            <TextBlock
              FontSize="10"
              VerticalAlignment="Bottom"
              HorizontalAlignment="Center"
              Foreground="{DynamicResource ForegroundSecondary}"
              Margin="0,0,10,0"
              Text="{Binding Path=CreatedAt, Converter={StaticResource DateTimeConverter}}">

              <TextBlock.Style>
                <Style TargetType="{x:Type TextBlock}">
                  <Setter Property="Visibility" Value="Visible"/>
                  <Style.Triggers>
                    <DataTrigger Binding="{Binding ElementName=PlaceholderName, Path=IsMouseOver}" Value="True">
                      <Setter Property="Visibility" Value="Hidden"/>
                    </DataTrigger>
                  </Style.Triggers>
                </Style>
              </TextBlock.Style>
            </TextBlock>
          </Grid>
          <StackPanel Margin="10,0,10,15">
            <local:BindableRichTextBox
              Margin="0,0,0,0"
              Background="Transparent"
              BorderBrush="Transparent"
              BorderThickness="0"
              IsReadOnly="True"
              VerticalScrollBarVisibility="Auto"
              HorizontalScrollBarVisibility="Auto"
              Foreground="{DynamicResource Foreground}"
              FontSize="14"
              Document="{Binding Path=Content, Converter={StaticResource StringToFlowDocumentConverter}}"
              >
              <local:BindableRichTextBox.Resources>
                <Style TargetType="{x:Type Paragraph}">
                  <Setter Property="Margin" Value="0"/>
                </Style>
              </local:BindableRichTextBox.Resources>

              <!-- Context Menu -->
              <local:BindableRichTextBox.ContextMenu>
                <ContextMenu>
                  <!-- Open Note -->
                  <!-- @TODO: Visibility -->
                  <MenuItem Header="Open note">
                    <MenuItem.Icon>
                      <TextBlock FontFamily="Segoe MDL2 Assets" Text="&#xE8A7;"/>
                    </MenuItem.Icon>
                  </MenuItem>

                  <!-- Close Note -->
                  <!-- @TODO: Visibility
                  <MenuItem Header="Close note">
                    <MenuItem.Icon>
                      <TextBlock FontFamily="Segoe MDL2 Assets" Text="&#xE73F;"/>
                    </MenuItem.Icon>
                  </MenuItem>
                  -->

                  <!-- Delete -->
                  <MenuItem Header="Delete note">
                    <MenuItem.Icon>
                      <TextBlock FontFamily="Segoe MDL2 Assets" Text="&#xE74D;"/>
                    </MenuItem.Icon>
                  </MenuItem>
                </ContextMenu>
              </local:BindableRichTextBox.ContextMenu>

            </local:BindableRichTextBox>
          </StackPanel>
        </StackPanel>
      </Border>
    </DataTemplate>
  </Window.Resources>

  <StackPanel Orientation="Vertical">
    <local:MainWindowTitleBar Margin="0"/>
    <StackPanel Orientation="Horizontal">
      <Button Content="App Theme" Click="ToggleAppThemeHandler" Margin="5"/>
      <Button Content="Window Theme" Click="ToggleWindowThemeHandler" Margin="5"/>
    </StackPanel>

    <TextBlock
      Style="{StaticResource SubtitleTextBlockStyle}"
      Text="Sticky Notes"
      FontWeight="Bold"
      Margin="5,0"
    />

    <StackPanel Orientation="Vertical" Margin="10">
      <ItemsControl ItemsSource="{Binding}" ItemTemplate="{StaticResource NoteItemTemplate}">
        <ItemsControl.ItemContainerStyle>
          <Style>
            <Setter Property="FrameworkElement.Margin" Value="0,5"/>
          </Style>
        </ItemsControl.ItemContainerStyle>
      </ItemsControl>
    </StackPanel>
  </StackPanel>
</Window>
