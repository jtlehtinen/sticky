<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:local="clr-namespace:ModernWpf.Controls" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:ui="http://schemas.modernwpf.com/2019">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="/ModernWpf;component/Styles/Slider.xaml" />
    <ResourceDictionary Source="/ModernWpf;component/Styles/TextStyles.xaml" />
    <ResourceDictionary Source="/ModernWpf.Controls;component/CommandBar/AppBarButton.xaml" />
    <ResourceDictionary Source="/ModernWpf.Controls;component/CommandBar/AppBarToggleButton.xaml" />
    <ResourceDictionary Source="/ModernWpf.Controls;component/CommandBar/CommandBar.xaml" />
    <ResourceDictionary Source="/ModernWpf.Controls;component/Flyout/FlyoutPresenter.xaml" />
    <ResourceDictionary>
      <ui:DoubleProportionConverter x:Key="DoubleProportionConverter" />
      <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    </ResourceDictionary>
  </ResourceDictionary.MergedDictionaries>

  <Style TargetType="local:MediaTransportControls">
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="FlowDirection" Value="LeftToRight" />
    <Setter Property="Margin" Value="{DynamicResource MediaTransportControlsMargin}" />
    <Setter Property="MaxWidth" Value="{DynamicResource MediaTransportControlsMaxWidth}" />
    <Setter Property="MinWidth" Value="{DynamicResource MediaTransportControlsMinWidth}" />
    <Setter Property="UseSystemFocusVisuals" Value="{DynamicResource UseSystemFocusVisuals}" />
    <Setter Property="CornerRadius" Value="{DynamicResource OverlayCornerRadius}" />
    <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:MediaTransportControls">
          <ControlTemplate.Resources>
            <!--  New AppBar button style 40x40 pixels in size  -->
            <Style x:Key="AppBarButtonStyle" BasedOn="{StaticResource DefaultAppBarButtonStyle}" TargetType="local:AppBarButton">
              <Setter Property="Height" Value="{DynamicResource MediaTransportControlsAppBarButtonHeight}" />
              <Setter Property="Width" Value="{DynamicResource MediaTransportControlsAppBarButtonWidth}" />
            </Style>
            <!--  New AppBarToggle button style 40x40 pixels in size  -->
            <Style x:Key="AppBarToggleButtonStyle" BasedOn="{StaticResource DefaultAppBarToggleButtonStyle}" TargetType="local:AppBarToggleButton">
              <Setter Property="Height" Value="{DynamicResource MediaTransportControlsAppBarButtonHeight}" />
              <Setter Property="Width" Value="{DynamicResource MediaTransportControlsAppBarButtonWidth}" />
            </Style>
            <!--  New CommandBar Style  -->
            <Style x:Key="CommandBarStyle" BasedOn="{StaticResource DefaultCommandBarStyle}" TargetType="local:CommandBar">
              <Setter Property="Background" Value="Transparent" />
              <Setter Property="DefaultLabelPosition" Value="Collapsed" />
            </Style>
            <!--  Style for Error Message text  -->
            <Style x:Key="MediaTextBlockStyle" BasedOn="{StaticResource CaptionTextBlockStyle}" TargetType="TextBlock">
              <Setter Property="VerticalAlignment" Value="Center" />
              <Setter Property="Foreground" Value="{DynamicResource MediaTransportControlsFillMediaText}" />
              <!--<Setter Property="FontSize" Value="{DynamicResource MTCMediaFontSize}" />-->
              <!--<Setter Property="FontFamily" Value="{DynamicResource MTCMediaFontFamily}" />-->
            </Style>
            <!--  Style for Volume Flyout used in Media Transport Controls  -->
            <Style x:Key="FlyoutStyle" BasedOn="{StaticResource DefaultFlyoutPresenterStyle}" TargetType="local:FlyoutPresenter">
              <Setter Property="Background" Value="{DynamicResource MediaTransportControlsFlyoutBackground}" />
              <Setter Property="Padding" Value="0" />
              <Setter Property="CornerRadius" Value="{DynamicResource OverlayCornerRadius}" />
            </Style>

            <Style x:Key="MediaSliderStyle" BasedOn="{StaticResource DefaultSliderStyle}" TargetType="Slider" />
            <Style x:Key="MediaControlAppBarButtonStyle" BasedOn="{StaticResource DefaultAppBarButtonStyle}" TargetType="local:AppBarButton" />
          </ControlTemplate.Resources>
          <Grid x:Name="RootGrid" Background="Transparent" ClipToBounds="True">
            <Border x:Name="ControlPanelGrid" VerticalAlignment="Bottom" Background="{DynamicResource MediaTransportControlsPanelBackground}" BorderBrush="{DynamicResource MediaTransportControlsBorderBrush}" BorderThickness="{DynamicResource MediaTransportControlsBorderThickness}" CornerRadius="{DynamicResource ControlCornerRadius}" RenderTransformOrigin="0.5,0.5">
              <Border.RenderTransform>
                <TranslateTransform x:Name="TranslateVertical" />
              </Border.RenderTransform>
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="*" />
                  <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Border x:Name="ErrorBorder" Grid.ColumnSpan="3" Width="320" Height="96" HorizontalAlignment="Center" Background="{DynamicResource MediaTransportControlsPanelBackground}" Visibility="Collapsed">
                  <TextBlock x:Name="ErrorTextBlock" Margin="12" Style="{DynamicResource CaptionTextBlockStyle}" TextWrapping="Wrap" />
                </Border>
                <Border x:Name="MediaTransportControls_Timeline_Border" Grid.Row="1" Grid.Column="1">
                  <Grid x:Name="MediaTransportControls_Timeline_Grid">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                      <RowDefinition />
                      <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <Slider x:Name="ProgressSlider" Height="{DynamicResource MediaTransportControlsSliderHeight}" MinWidth="80" Margin="7,2,7,1" VerticalAlignment="Center" AutoToolTipPlacement="None" Maximum="{Binding Target.DurationTime, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=OneWay}" Value="{Binding Target.CurrentTime, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}" />

                    <local:ProgressBar x:Name="BufferingProgressBar" Height="4" Margin="0,2,0,0" VerticalAlignment="Top" IsHitTestVisible="False" IsIndeterminate="True" Visibility="Collapsed" />

                    <Grid x:Name="TimeTextGrid" Grid.Row="1" Height="16" Margin="7,0,7,2">
                      <TextBlock x:Name="TimeElapsedElement" Margin="0" HorizontalAlignment="Left" VerticalAlignment="Bottom" Style="{DynamicResource CaptionTextBlockStyle}" Text="{Binding Target.CurrentTimeString, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=OneWay}" />
                      <TextBlock x:Name="TimeRemainingElement" HorizontalAlignment="Right" VerticalAlignment="Bottom" Style="{DynamicResource CaptionTextBlockStyle}" Text="{Binding Target.LeftTimeString, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=OneWay}" />
                    </Grid>

                  </Grid>
                </Border>
                <Border x:Name="LeftSidePlayBorder" Grid.Row="1" Grid.Column="0" Visibility="Collapsed">
                  <local:AppBarButton x:Name="PlayPauseButtonOnLeft" Margin="0" VerticalAlignment="Center" Style="{StaticResource AppBarButtonStyle}">
                    <local:AppBarButton.Resources>
                      <Thickness x:Key="AppBarButtonInnerBorderMargin">5</Thickness>
                      <Thickness x:Key="AppBarButtonContentViewboxCollapsedMargin">0,12</Thickness>
                    </local:AppBarButton.Resources>
                    <local:AppBarButton.Icon>
                      <ui:FontIcon x:Name="PlayPauseSymbolLeft" Glyph="&#xF5B0;" />
                    </local:AppBarButton.Icon>
                  </local:AppBarButton>
                </Border>
                <Border x:Name="MediaTransportControls_Command_Border" Grid.Row="2" Grid.Column="1">
                  <local:CommandBar x:Name="MediaControlsCommandBar" Margin="0,3" IsDynamicOverflowEnabled="False" Style="{StaticResource CommandBarStyle}">
                    <local:CommandBar.Resources>
                      <Thickness x:Key="AppBarButtonInnerBorderMargin">5</Thickness>
                      <Thickness x:Key="AppBarButtonContentViewboxCollapsedMargin">0,12</Thickness>
                      <sys:Double x:Key="AppBarThemeCompactHeight">40</sys:Double>
                      <sys:Double x:Key="AppBarMoreButtonColumnMinWidth">0</sys:Double>
                    </local:CommandBar.Resources>
                    <local:CommandBar.PrimaryCommands>
                      <local:AppBarButton x:Name="VolumeMuteButton" IsEnabled="{TemplateBinding IsVolumeEnabled}" Style="{StaticResource AppBarButtonStyle}" Visibility="{TemplateBinding IsVolumeButtonVisible,
                                                                             Converter={StaticResource BooleanToVisibilityConverter}}">
                        <local:AppBarButton.Flyout>
                          <local:Flyout x:Name="VolumeFlyout" FlyoutPresenterStyle="{StaticResource FlyoutStyle}">
                            <ui:SimpleStackPanel Margin="3,11" Orientation="Horizontal">
                              <local:AppBarButton x:Name="AudioMuteButton" HorizontalAlignment="Center" VerticalAlignment="Center" Style="{StaticResource AppBarButtonStyle}">
                                <local:AppBarButton.Resources>
                                  <Thickness x:Key="AppBarButtonContentViewboxCollapsedMargin">0,12</Thickness>
                                  <Thickness x:Key="AppBarButtonInnerBorderMargin">5</Thickness>
                                </local:AppBarButton.Resources>
                                <local:AppBarButton.Icon>
                                  <ui:SymbolIcon x:Name="AudioMuteSymbol" Symbol="Volume" />
                                </local:AppBarButton.Icon>
                              </local:AppBarButton>
                              <Slider x:Name="VolumeSlider" Width="{DynamicResource MediaTransportControlsSliderWidth}" Height="{DynamicResource MediaTransportControlsSliderHeight}" Margin="12,0,8,0" HorizontalAlignment="Center" VerticalAlignment="Center" AutoToolTipPlacement="None" IsSnapToTickEnabled="True" Maximum="100" TickFrequency="1" />
                              <TextBlock x:Name="VolumeValue" Width="24" Margin="8,0,16,0" HorizontalAlignment="Center" VerticalAlignment="Center" Style="{StaticResource MediaTextBlockStyle}" TextAlignment="Right" />
                            </ui:SimpleStackPanel>
                          </local:Flyout>
                        </local:AppBarButton.Flyout>
                        <local:AppBarButton.Icon>
                          <ui:SymbolIcon x:Name="VolumeMuteSymbol" Symbol="Volume" />
                        </local:AppBarButton.Icon>
                      </local:AppBarButton>
                      <local:AppBarButton x:Name="CCSelectionButton" Style="{StaticResource AppBarButtonStyle}" Visibility="Collapsed">
                        <local:AppBarButton.Icon>
                          <ui:FontIcon Glyph="&#xED1E;" />
                        </local:AppBarButton.Icon>
                      </local:AppBarButton>
                      <local:AppBarButton x:Name="AudioTracksSelectionButton" Style="{StaticResource AppBarButtonStyle}" Visibility="Collapsed">
                        <local:AppBarButton.Icon>
                          <ui:FontIcon Glyph="&#xED1F;" />
                        </local:AppBarButton.Icon>
                      </local:AppBarButton>
                      <local:AppBarSeparator x:Name="LeftSeparator" Width="0" Height="0" Margin="0,0" />
                      <local:AppBarButton x:Name="StopButton" Icon="Stop" IsEnabled="{TemplateBinding IsStopEnabled}" Style="{StaticResource AppBarButtonStyle}" Visibility="{TemplateBinding IsStopButtonVisible,
                                                                             Converter={StaticResource BooleanToVisibilityConverter}}" />
                      <local:AppBarButton x:Name="SkipBackwardButton" IsEnabled="{TemplateBinding IsSkipBackwardEnabled}" Style="{StaticResource AppBarButtonStyle}" Visibility="{TemplateBinding IsSkipBackwardButtonVisible,
                                                                             Converter={StaticResource BooleanToVisibilityConverter}}">
                        <local:AppBarButton.Icon>
                          <ui:FontIcon Glyph="&#xED3C;" />
                        </local:AppBarButton.Icon>
                      </local:AppBarButton>
                      <local:AppBarButton x:Name="PreviousTrackButton" Style="{StaticResource AppBarButtonStyle}" Visibility="{TemplateBinding IsPreviousTrackButtonVisible,
                                                                             Converter={StaticResource BooleanToVisibilityConverter}}">
                        <local:AppBarButton.Icon>
                          <ui:FontIcon Glyph="&#xF8AC;" />
                        </local:AppBarButton.Icon>
                      </local:AppBarButton>
                      <local:AppBarButton x:Name="RewindButton" IsEnabled="{TemplateBinding IsFastRewindEnabled}" Style="{StaticResource AppBarButtonStyle}" Visibility="{TemplateBinding IsFastRewindButtonVisible,
                                                                             Converter={StaticResource BooleanToVisibilityConverter}}">
                        <local:AppBarButton.Icon>
                          <ui:FontIcon Glyph="&#xE627;" />
                        </local:AppBarButton.Icon>
                      </local:AppBarButton>
                      <local:AppBarButton x:Name="PlayPauseButton" Style="{StaticResource AppBarButtonStyle}">
                        <local:AppBarButton.Icon>
                          <ui:FontIcon x:Name="PlayPauseSymbol" Glyph="&#xF5B0;" />
                        </local:AppBarButton.Icon>
                      </local:AppBarButton>
                      <local:AppBarButton x:Name="FastForwardButton" IsEnabled="{TemplateBinding IsFastForwardEnabled}" Style="{StaticResource AppBarButtonStyle}" Visibility="{TemplateBinding IsFastForwardButtonVisible,
                                                                             Converter={StaticResource BooleanToVisibilityConverter}}">
                        <local:AppBarButton.Icon>
                          <ui:FontIcon Glyph="&#xE628;" />
                        </local:AppBarButton.Icon>
                      </local:AppBarButton>
                      <local:AppBarButton x:Name="NextTrackButton" Style="{StaticResource AppBarButtonStyle}" Visibility="{TemplateBinding IsNextTrackButtonVisible,
                                                                             Converter={StaticResource BooleanToVisibilityConverter}}">
                        <local:AppBarButton.Icon>
                          <ui:FontIcon Glyph="&#xF8AD;" />
                        </local:AppBarButton.Icon>
                      </local:AppBarButton>
                      <local:AppBarButton x:Name="SkipForwardButton" IsEnabled="{TemplateBinding IsSkipForwardEnabled}" Style="{StaticResource AppBarButtonStyle}" Visibility="{TemplateBinding IsSkipForwardButtonVisible,
                                                                             Converter={StaticResource BooleanToVisibilityConverter}}">
                        <local:AppBarButton.Icon>
                          <ui:FontIcon Glyph="&#xED3D;" />
                        </local:AppBarButton.Icon>
                      </local:AppBarButton>
                      <local:AppBarButton x:Name="PlaybackRateButton" IsEnabled="{TemplateBinding IsPlaybackRateEnabled}" Style="{StaticResource AppBarButtonStyle}" Visibility="{TemplateBinding IsPlaybackRateButtonVisible,
                                                                             Converter={StaticResource BooleanToVisibilityConverter}}">
                        <local:AppBarButton.Icon>
                          <ui:FontIcon Glyph="&#xEC57;" />
                        </local:AppBarButton.Icon>
                      </local:AppBarButton>
                      <local:AppBarSeparator x:Name="RightSeparator" Width="0" Height="0" Margin="0,0" />
                      <local:AppBarToggleButton x:Name="RepeatButton" IsChecked="{Binding Target.IsRepeat, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}" IsEnabled="{TemplateBinding IsRepeatEnabled}" Style="{StaticResource AppBarToggleButtonStyle}" Visibility="{TemplateBinding IsRepeatButtonVisible,
                                                                             Converter={StaticResource BooleanToVisibilityConverter}}">
                        <local:AppBarToggleButton.Icon>
                          <ui:SymbolIcon x:Name="RepeatSymbol" Symbol="RepeatAll" />
                        </local:AppBarToggleButton.Icon>
                      </local:AppBarToggleButton>
                      <local:AppBarButton x:Name="ZoomButton" IsEnabled="{TemplateBinding IsZoomEnabled}" Style="{StaticResource AppBarButtonStyle}" Visibility="{TemplateBinding IsZoomButtonVisible,
                                                                             Converter={StaticResource BooleanToVisibilityConverter}}">
                        <local:AppBarButton.Icon>
                          <ui:FontIcon Glyph="&#xE799;" />
                        </local:AppBarButton.Icon>
                      </local:AppBarButton>
                      <local:AppBarButton x:Name="CastButton" Style="{StaticResource AppBarButtonStyle}">
                        <local:AppBarButton.Icon>
                          <ui:FontIcon Glyph="&#xEC15;" />
                        </local:AppBarButton.Icon>
                      </local:AppBarButton>
                      <local:AppBarButton x:Name="CompactOverlayButton" IsEnabled="{TemplateBinding IsCompactOverlayEnabled}" Style="{StaticResource AppBarButtonStyle}" Visibility="{TemplateBinding IsCompactOverlayButtonVisible,
                                                                             Converter={StaticResource BooleanToVisibilityConverter}}">
                        <local:AppBarButton.Icon>
                          <ui:FontIcon Glyph="&#xE8B9;" />
                        </local:AppBarButton.Icon>
                      </local:AppBarButton>
                      <local:AppBarButton x:Name="FullWindowButton" IsEnabled="{TemplateBinding IsFullWindowEnabled}" Style="{StaticResource AppBarButtonStyle}" Visibility="{TemplateBinding IsFullWindowButtonVisible,
                                                                             Converter={StaticResource BooleanToVisibilityConverter}}">
                        <local:AppBarButton.Icon>
                          <ui:SymbolIcon x:Name="FullWindowSymbol" Symbol="FullScreen" />
                        </local:AppBarButton.Icon>
                      </local:AppBarButton>
                    </local:CommandBar.PrimaryCommands>
                  </local:CommandBar>
                </Border>
              </Grid>
            </Border>
            <ui:DebugVisualStateManager.VisualStateGroups>
              <!--  ControlPanel Visibility states  -->
              <VisualStateGroup x:Name="ControlPanelVisibilityStates">
                <VisualState x:Name="ControlPanelFadeIn">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ControlPanelGrid" Storyboard.TargetProperty="Opacity">
                      <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                      <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimation Storyboard.TargetName="TranslateVertical" Storyboard.TargetProperty="Y" From="50" To="0.5" Duration="0:0:0.3" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="ControlPanelFadeOut">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ControlPanelGrid" Storyboard.TargetProperty="Opacity">
                      <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                      <EasingDoubleKeyFrame KeyTime="0:0:0.7" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimation Storyboard.TargetName="TranslateVertical" Storyboard.TargetProperty="Y" From="0.5" To="50" Duration="0:0:0.7" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <!--  Focus states  -->
              <VisualStateGroup x:Name="MediaTransportControlMode">
                <ui:VisualStateGroupListener.Listener>
                  <ui:VisualStateGroupListener x:Name="MediaTransportControlModeListener" />
                </ui:VisualStateGroupListener.Listener>
                <VisualState x:Name="NormalMode" />
                <VisualState x:Name="CompactMode" />
              </VisualStateGroup>
              <!--  PlayPause states  -->
              <VisualStateGroup x:Name="PlayPauseStates">
                <ui:VisualStateGroupListener.Listener>
                  <ui:VisualStateGroupListener x:Name="PlayPauseStatesListener" />
                </ui:VisualStateGroupListener.Listener>
                <VisualState x:Name="PlayState" />
                <VisualState x:Name="PauseState" />
              </VisualStateGroup>
              <!--  VolumeMute states  -->
              <VisualStateGroup x:Name="VolumeMuteStates">
                <ui:VisualStateGroupListener.Listener>
                  <ui:VisualStateGroupListener x:Name="VolumeMuteStatesListener" />
                </ui:VisualStateGroupListener.Listener>
                <VisualState x:Name="VolumeState" />
                <VisualState x:Name="MuteState" />
              </VisualStateGroup>
            </ui:DebugVisualStateManager.VisualStateGroups>
          </Grid>
          <ControlTemplate.Triggers>
            <!--  PauseState  -->
            <Trigger SourceName="MediaTransportControlModeListener" Property="CurrentStateName" Value="CompactMode">
              <Setter TargetName="LeftSidePlayBorder" Property="Visibility" Value="Visible" />
              <Setter TargetName="TimeTextGrid" Property="Visibility" Value="Collapsed" />
              <Setter TargetName="MediaTransportControls_Command_Border" Property="Grid.Column" Value="2" />
              <Setter TargetName="MediaTransportControls_Command_Border" Property="Grid.Row" Value="1" />
              <Setter TargetName="ControlPanelGrid" Property="Height" Value="48" />
              <Setter TargetName="MediaControlsCommandBar" Property="Margin" Value="0" />
              <Setter TargetName="PlayPauseButton" Property="Visibility" Value="Collapsed" />
              <Setter TargetName="ProgressSlider" Property="Margin" Value="{DynamicResource MediaTransportControlsProgressSliderCompactMargin}" />
              <Setter TargetName="ControlPanelGrid" Property="Padding" Value="3" />
            </Trigger>
            <!--  PauseState  -->
            <Trigger SourceName="PlayPauseStatesListener" Property="CurrentStateName" Value="PlayState">
              <Setter TargetName="PlayPauseSymbolLeft" Property="Glyph" Value="&#xF8AE;" />
              <Setter TargetName="PlayPauseSymbol" Property="Glyph" Value="&#xF8AE;" />
            </Trigger>
            <!--  PauseState  -->
            <Trigger SourceName="VolumeMuteStatesListener" Property="CurrentStateName" Value="MuteState">
              <Setter TargetName="AudioMuteSymbol" Property="Symbol" Value="Mute" />
              <Setter TargetName="VolumeMuteSymbol" Property="Symbol" Value="Mute" />
            </Trigger>

            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="HasTarget" Value="True" />
                <Condition Property="IsOpening" Value="False" />
                <Condition Property="UseAcrylic" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="ControlPanelGrid" Property="Background" Value="{Binding TemplateSettings.AcrylicBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
            </MultiTrigger>

            <Trigger Property="IsBuffering" Value="True">
              <Setter TargetName="ProgressSlider" Property="Visibility" Value="Collapsed" />
              <Setter TargetName="BufferingProgressBar" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="HasTarget" Value="True">
              <Setter TargetName="VolumeValue" Property="Text" Value="{Binding Target.Volume, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource DoubleProportionConverter}, ConverterParameter='100'}" />
              <Setter TargetName="VolumeSlider" Property="Value" Value="{Binding Target.Volume, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource DoubleProportionConverter}, ConverterParameter='100', Mode=TwoWay}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>
