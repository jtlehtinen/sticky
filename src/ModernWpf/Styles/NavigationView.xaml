<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:local="clr-namespace:ModernWpf.Controls" xmlns:primitives="clr-namespace:ModernWpf.Controls.Primitives" xmlns:sys="clr-namespace:System;assembly=mscorlib">

  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="Button.xaml" />
    <ResourceDictionary Source="TextStyles.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <Thickness x:Key="NavigationViewAutoSuggestBoxMargin">16,0</Thickness>
  <Thickness x:Key="TopNavigationViewAutoSuggestBoxMargin">4,0</Thickness>
  <sys:Double x:Key="PaneToggleButtonHeight">36</sys:Double>
  <sys:Double x:Key="PaneToggleButtonWidth">40</sys:Double>
  <sys:Double x:Key="NavigationViewCompactPaneLength">48</sys:Double>
  <sys:Double x:Key="NavigationViewIconBoxWidth">40</sys:Double>
  <sys:Double x:Key="NavigationViewTopPaneHeight">48</sys:Double>
  <sys:Double x:Key="NavigationViewAutoSuggestAreaHeight">40</sys:Double>
  <sys:Double x:Key="TopNavigationViewPaneCustomContentMinWidth">48</sys:Double>
  <sys:Double x:Key="TopNavigationViewOverflowButtonWidth">40</sys:Double>
  <sys:Double x:Key="TopNavigationViewOverflowButtonHeight">40</sys:Double>
  <sys:Double x:Key="TopNavigationViewSettingsButtonWidth">40</sys:Double>
  <sys:Double x:Key="TopNavigationViewSettingsButtonHeight">40</sys:Double>

  <sys:Double x:Key="NavigationViewItemOnLeftMinHeight">36</sys:Double>
  <sys:Double x:Key="NavigationViewPaneHeaderRowMinHeight">40</sys:Double>
  <sys:Double x:Key="NavigationViewItemOnLeftIconBoxHeight">16</sys:Double>
  <sys:Double x:Key="NavigationViewSelectionIndicatorWidth">3</sys:Double>
  <sys:Double x:Key="NavigationViewSelectionIndicatorHeight">16</sys:Double>
  <sys:Double x:Key="NavigationViewSelectionIndicatorRadius">2</sys:Double>

  <sys:Double x:Key="NavigationViewItemSeparatorHeight">1</sys:Double>
  <sys:Double x:Key="TopNavigationViewItemSeparatorWidth">1</sys:Double>

  <Thickness x:Key="NavigationViewToggleBorderThickness">0</Thickness>
  <Thickness x:Key="NavigationViewItemBorderThickness">1</Thickness>
  <Thickness x:Key="NavigationViewItemOnLeftIconBoxMargin">0</Thickness>
  <Thickness x:Key="NavigationViewItemButtonMargin">4,2</Thickness>
  <Thickness x:Key="NavigationViewItemButtonNormalMargin">0,2</Thickness>
  <Thickness x:Key="NavigationViewItemInnerHeaderMargin">16,0</Thickness>
  <Thickness x:Key="TopNavigationViewItemInnerHeaderMargin">12,0</Thickness>
  <Thickness x:Key="NavigationViewMinimalHeaderMargin">-24,44,0,0</Thickness>
  <Thickness x:Key="NavigationViewButtonHolderGridMargin">0,4</Thickness>
  <Thickness x:Key="NavigationViewPaneContentGridMargin">-1,3</Thickness>
  <Thickness x:Key="NavigationViewContentGridBorderThickness">1,1,0,0</Thickness>
  <Thickness x:Key="NavigationViewMinimalContentGridBorderThickness">0,1,0,0</Thickness>
  <Thickness x:Key="TopNavigationViewContentGridBorderThickness">0,1,0,0</Thickness>
  <Thickness x:Key="TopNavigationViewTopNavGridMargin">4,0</Thickness>
  <Thickness x:Key="NavigationViewBorderThickness">1</Thickness>
  <Thickness x:Key="NavigationViewHeaderMargin">56,44,0,0</Thickness>
  <Thickness x:Key="NavigationViewContentPresenterMargin">0</Thickness>
  <Thickness x:Key="NavigationViewContentMargin">0</Thickness>
  <Thickness x:Key="NavigationViewMinimalContentMargin">0</Thickness>
  <Thickness x:Key="TopNavigationViewContentMargin">0</Thickness>
  <Thickness x:Key="NavigationViewPaneTitlePresenterMargin">8,4,0,0</Thickness>
  <Thickness x:Key="NavigationViewItemMargin">0</Thickness>
  <Thickness x:Key="TopNavigationViewItemMargin">0</Thickness>
  <Thickness x:Key="NavigationViewItemSeparatorMargin">0,3,0,4</Thickness>
  <Thickness x:Key="NavigationViewCompactItemSeparatorMargin">0,3,0,4</Thickness>
  <Thickness x:Key="TopNavigationViewItemSeparatorMargin">3,0,4,0</Thickness>
  <Thickness x:Key="TopNavigationViewOverflowButtonMargin">0</Thickness>
  <Thickness x:Key="NavigationViewItemContentPresenterMargin">4,-1,8,-1</Thickness>
  <Thickness x:Key="NavigationViewCompactItemContentPresenterMargin">0,0,0,0</Thickness>
  <Thickness x:Key="TopNavigationViewItemContentPresenterMargin">8,-1,12,-1</Thickness>
  <Thickness x:Key="TopNavigationViewItemContentOnlyContentPresenterMargin">12,0</Thickness>
  <Thickness x:Key="NavigationViewItemExpandChevronMargin">0,0,-14,0</Thickness>
  <Thickness x:Key="TopNavigationViewItemExpandChevronMargin">-16,0,0,0</Thickness>
  <Thickness x:Key="TopNavigationViewItemIconOnlyExpandChevronMargin">0,0,0,0</Thickness>
  <Thickness x:Key="TopNavigationViewItemContentOnlyExpandChevronMargin">-12,0,0,0</Thickness>
  <Thickness x:Key="TopNavigationViewItemOnOverflowContentPresenterMargin">12,0,20,0</Thickness>
  <Thickness x:Key="TopNavigationViewItemOnOverflowNoIconContentPresenterMargin">16,0,20,0</Thickness>
  <Thickness x:Key="TopNavigationViewItemOnOverflowExpandChevronMargin">-4,0,-8,0</Thickness>
  <Thickness x:Key="TopNavigationViewItemOnOverflowExpandChevronPadding">12,0,12,0</Thickness>

  <CornerRadius x:Key="NavigationViewContentGridCornerRadius">8,0,0,0</CornerRadius>
  <CornerRadius x:Key="TopNavigationViewContentGridCornerRadius">0</CornerRadius>
  <CornerRadius x:Key="NavigationViewMinimalContentGridCornerRadius">0</CornerRadius>

  <!--  The two resources below must be defined at the app level in order to take effect.  -->
  <Thickness x:Key="TopNavigationViewOverflowMenuPadding">0,8</Thickness>
  <Thickness x:Key="NavigationViewItemChildrenMenuFlyoutPadding">0,8</Thickness>

  <!--
        The resource below must be defined at the app level in order to affect the expand/collapse chevron font size
        used in the Top NavigationView's Overflow menu.
    -->
  <sys:Double x:Key="NavigationViewItemExpandedGlyphFontSize">12</sys:Double>
  <sys:String x:Key="NavigationViewItemExpandedGlyph">&#xF2A3;</sys:String>

  <sys:Double x:Key="PaneToggleButtonSize">40</sys:Double>

  <Style x:Key="PaneToggleButtonStyle" BasedOn="{StaticResource DefaultButtonStyle}" TargetType="Button">
    <Setter Property="FontSize" Value="16" />
    <Setter Property="FontFamily" Value="{DynamicResource FluentSystemIcons}" />
    <Setter Property="MinHeight" Value="{StaticResource PaneToggleButtonHeight}" />
    <Setter Property="MinWidth" Value="{StaticResource PaneToggleButtonWidth}" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="VerticalAlignment" Value="Top" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Background" Value="{DynamicResource NavigationViewItemBackground}" />
    <Setter Property="Foreground" Value="{DynamicResource NavigationViewItemForeground}" />
    <Setter Property="BorderThickness" Value="{StaticResource NavigationViewToggleBorderThickness}" />
    <Setter Property="Padding" Value="{StaticResource NavigationViewItemButtonMargin}" />
    <Setter Property="primitives:ControlHelper.CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
    <Setter Property="primitives:FocusVisualHelper.FocusVisualMargin" Value="0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Border x:Name="LayoutRoot" Height="{TemplateBinding MinHeight}" Margin="{TemplateBinding Padding}" HorizontalAlignment="Stretch" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding primitives:ControlHelper.CornerRadius}" SnapsToDevicePixels="True">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition primitives:RowDefinitionHelper.PixelHeight="{DynamicResource PaneToggleButtonHeight}" />
              </Grid.RowDefinitions>

              <Border Width="{TemplateBinding MinWidth}">
                <local:FontIcon x:Name="Icon" Width="16" Height="16" HorizontalAlignment="Center" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}" Glyph="&#xF4E1;" />
              </Border>

              <local:ContentPresenterEx x:Name="ContentPresenter" Grid.Column="1" Margin="4,0,0,0" VerticalAlignment="Center" Content="{TemplateBinding Content}" FontSize="{TemplateBinding FontSize}" />
            </Grid>
          </Border>

          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource NavigationViewButtonBackgroundPointerOver}" />
              <Setter TargetName="ContentPresenter" Property="Foreground" Value="{DynamicResource NavigationViewButtonForegroundPointerOver}" />
              <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource NavigationViewButtonForegroundPointerOver}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource NavigationViewButtonBackgroundPressed}" />
              <Setter TargetName="ContentPresenter" Property="Foreground" Value="{DynamicResource NavigationViewButtonForegroundPressed}" />
              <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource NavigationViewButtonForegroundPressed}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource NavigationViewButtonBackgroundDisabled}" />
              <Setter TargetName="ContentPresenter" Property="Foreground" Value="{DynamicResource NavigationViewButtonForegroundDisabled}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="NavigationViewPaneSearchButtonStyle" BasedOn="{StaticResource DefaultButtonStyle}" TargetType="Button">
    <Setter Property="FontFamily" Value="{DynamicResource SymbolThemeFontFamily}" />
    <Setter Property="BorderThickness" Value="{DynamicResource NavigationViewToggleBorderThickness}" />
    <Setter Property="Background" Value="{DynamicResource NavigationViewItemBackground}" />
    <Setter Property="Foreground" Value="{DynamicResource NavigationViewItemForeground}" />
    <Setter Property="Content" Value="&#xE11A;" />
    <Setter Property="MinHeight" Value="36" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="primitives:FocusVisualHelper.FocusVisualMargin" Value="-4,0" />
    <Setter Property="primitives:ControlHelper.CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
  </Style>

  <Style x:Key="NavigationViewOverflowButtonStyleWhenPaneOnTop" BasedOn="{StaticResource DefaultButtonStyle}" TargetType="Button">
    <Setter Property="Background" Value="{DynamicResource NavigationViewItemBackground}" />
    <Setter Property="Foreground" Value="{DynamicResource TopNavigationViewItemForeground}" />
    <Setter Property="BorderBrush" Value="{DynamicResource NavigationViewItemBorderBrush}" />
    <Setter Property="BorderThickness" Value="{DynamicResource NavigationViewItemBorderThickness}" />
    <Setter Property="Height" Value="{DynamicResource TopNavigationViewOverflowButtonHeight}" />
    <Setter Property="Width" Value="{DynamicResource TopNavigationViewOverflowButtonWidth}" />
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="VerticalAlignment" Value="Stretch" />
    <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
    <Setter Property="primitives:FocusVisualHelper.UseSystemFocusVisuals" Value="True" />
    <Setter Property="primitives:FocusVisualHelper.FocusVisualMargin" Value="0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid x:Name="RootGrid" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Background="{TemplateBinding Background}">
            <Rectangle x:Name="PointerRectangle" Fill="Transparent" Visibility="Collapsed" />
            <local:FontIcon x:Name="Icon" HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="{DynamicResource FluentSystemIcons}" FontSize="16" Foreground="{TemplateBinding Foreground}" Glyph="&#xFC2D;" IsHitTestVisible="False" />
          </Grid>
          <ControlTemplate.Triggers>
            <!--  PointerOver  -->
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="RootGrid" Property="Background" Value="{DynamicResource TopNavigationViewItemBackgroundPointerOver}" />
              <Setter TargetName="PointerRectangle" Property="Fill" Value="{DynamicResource NavigationViewItemBackgroundPointerOver}" />
              <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource TopNavigationViewItemForegroundPointerOver}" />
            </Trigger>
            <!--  Pressed  -->
            <Trigger Property="IsPressed" Value="True">
              <Setter TargetName="RootGrid" Property="Background" Value="{DynamicResource TopNavigationViewItemBackgroundPressed}" />
              <Setter TargetName="PointerRectangle" Property="Fill" Value="{DynamicResource NavigationViewItemBackgroundPressed}" />
              <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource TopNavigationViewItemForegroundPressed}" />
            </Trigger>
            <!--  Disabled  -->
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource TopNavigationViewItemForegroundDisabled}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="NavigationViewOverflowButtonNoLabelStyleWhenPaneOnTop" BasedOn="{StaticResource DefaultButtonStyle}" TargetType="Button">
    <Setter Property="Background" Value="{DynamicResource NavigationViewItemBackground}" />
    <Setter Property="Foreground" Value="{DynamicResource TopNavigationViewItemForeground}" />
    <Setter Property="BorderBrush" Value="{DynamicResource NavigationViewItemBorderBrush}" />
    <Setter Property="BorderThickness" Value="{DynamicResource NavigationViewItemBorderThickness}" />
    <Setter Property="Height" Value="{DynamicResource TopNavigationViewOverflowButtonHeight}" />
    <Setter Property="Width" Value="{DynamicResource TopNavigationViewOverflowButtonWidth}" />
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="VerticalAlignment" Value="Top" />
    <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
    <Setter Property="primitives:FocusVisualHelper.UseSystemFocusVisuals" Value="True" />
    <Setter Property="primitives:FocusVisualHelper.FocusVisualMargin" Value="0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid x:Name="RootGrid" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Background="{TemplateBinding Background}">
            <Rectangle x:Name="PointerRectangle" Fill="Transparent" />
            <local:FontIcon x:Name="Icon" HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="{DynamicResource FluentSystemIcons}" FontSize="20" Foreground="{TemplateBinding Foreground}" Glyph="&#xFC2D;" IsHitTestVisible="False" />
          </Grid>
          <ControlTemplate.Triggers>
            <!--  PointerOver  -->
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="RootGrid" Property="Background" Value="{DynamicResource TopNavigationViewItemBackgroundPointerOver}" />
              <Setter TargetName="PointerRectangle" Property="Fill" Value="{DynamicResource NavigationViewItemBackgroundPointerOver}" />
              <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource TopNavigationViewItemForegroundPointerOver}" />
            </Trigger>
            <!--  Pressed  -->
            <Trigger Property="IsPressed" Value="True">
              <Setter TargetName="RootGrid" Property="Background" Value="{DynamicResource TopNavigationViewItemBackgroundPressed}" />
              <Setter TargetName="PointerRectangle" Property="Fill" Value="{DynamicResource NavigationViewItemBackgroundPressed}" />
              <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource TopNavigationViewItemForegroundPressed}" />
            </Trigger>
            <!--  Disabled  -->
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource TopNavigationViewItemForegroundDisabled}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="NavigationViewItemHeaderTextStyle" BasedOn="{StaticResource BaseTextBlockStyle}" TargetType="TextBlock">
    <Setter Property="FontSize" Value="14" />
    <Setter Property="FontWeight" Value="SemiBold" />
    <!--<Setter Property="OpticalMarginAlignment" Value="TrimSideBearings" />-->
    <Setter Property="TextWrapping" Value="NoWrap" />
  </Style>

  <Style x:Key="NavigationViewTitleHeaderContentControlTextStyle" TargetType="ContentControl">
    <Setter Property="FontWeight" Value="SemiBold" />
    <Setter Property="FontSize" Value="28" />
    <!--<Setter Property="FontFamily" Value="XamlAutoFontFamily" />-->
    <Setter Property="Margin" Value="{DynamicResource NavigationViewHeaderMargin}" />
    <Setter Property="VerticalAlignment" Value="Stretch" />
  </Style>

</ResourceDictionary>
